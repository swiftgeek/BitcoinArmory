CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
ADD_DEFINITIONS(-c -fPIC -DUSE_CRYPTOPP -D__STDC_LIMIT_MACROS )

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

IF(WIN32)
  INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/deps/cryptopp)
  SET(SWIG_DIR ${PROJECT_SOURCE_DIR}/deps/swigwin)
  SET(SWIG_EXECUTABLE ${PROJECT_SOURCE_DIR}/deps/swigwin/swig.exe)
  SET(SWIG_USE_FILE ${CMAKE_ROOT}/Modules/UseSWIG.cmake)
  FIND_PACKAGE(SWIG REQUIRED)
ELSE()
  FIND_PACKAGE(CryptoPP REQUIRED)
  INCLUDE_DIRECTORIES(${CRYPTOPP_INCLUDE_DIRS}/cryptopp)
  FIND_PACKAGE(SWIG REQUIRED)
ENDIF()

INCLUDE(${SWIG_USE_FILE})

FIND_PACKAGE(PythonLibs)
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

ADD_LIBRARY(UniversalTimer STATIC UniversalTimer.cpp)
ADD_LIBRARY(BinaryData STATIC BinaryData.cpp)
ADD_LIBRARY(BtcUtils STATIC BtcUtils.cpp)
ADD_LIBRARY(BlockObj STATIC BlockObj.cpp)
ADD_LIBRARY(BlockObjRef STATIC BlockObjRef.cpp)
ADD_LIBRARY(BlockUtils STATIC BlockUtils.cpp)
ADD_LIBRARY(EncryptionUtils STATIC EncryptionUtils.cpp)

SET_SOURCE_FILES_PROPERTIES(CppBlockUtils.i PROPERTIES CPLUSPLUS ON)
SET (CMAKE_SWIG_FLAGS -classic -v) 
SWIG_ADD_MODULE(CppBlockUtils python CppBlockUtils.i)
SWIG_LINK_LIBRARIES(CppBlockUtils ${PYTHON_LIBRARIES} )

INSTALL(TARGETS _CppBlockUtils LIBRARY DESTINATION share/${PROJECT_NAME})
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/CppBlockUtils.py testswig.py DESTINATION share/${PROJECT_NAME})
